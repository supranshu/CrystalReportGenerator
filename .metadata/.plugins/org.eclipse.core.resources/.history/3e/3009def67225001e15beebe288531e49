package com.report.service;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections.map.HashedMap;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.ResourceUtils;

import com.report.dao.StudentRepo;
import com.report.entities.Student;
import com.report.request.ReportRequest;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;


@Service
public class ReportGenerationService {

    private final StudentRepo studentRepo;

    @Autowired
    public ReportGenerationService(StudentRepo studentRepo) {
        this.studentRepo = studentRepo;
    }

    public String generateStudentReport(ReportRequest reportRequest) {
        // Implement the logic for generating the report based on the criteria in reportRequest

        // Get the criteria from reportRequest (e.g., year, branch)
        String year = reportRequest.getYear();
        String branch = reportRequest.getBranch();

        // Use the StudentRepo to fetch students based on the criteria
        List<Student> students = studentRepo.findByYearAndBranch(year, branch);

        // Create a ReportResponse object and set the students as the report data
        File file;
		try {
			file = ResourceUtils.getFile("classpath:students.jrxml");
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        JasperReport jasper;
		try {
			jasper = JasperCompileManager.compileReport(file.getAbsolutePath());
		} catch (JRException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        JRBeanCollectionDataSource datasource= new JRBeanCollectionDataSource(students);
        Map<String, Object> parameter=new  HashMap<>();
        parameter.put("Created by", "Supranshu s");
        try {
			JasperPrint print = JasperFillManager.fillReport(jasper,parameter ,datasource);
		} catch (JRException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        // You can add more logic here to process the report data before returning it

        return "";
    }
}
